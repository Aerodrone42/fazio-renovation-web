
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup Node.js ‚öôÔ∏è
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies üì¶
        run: npm ci || npm install
        
      - name: Create assets directory üìÅ
        run: |
          mkdir -p docs/assets
          touch docs/assets/.gitkeep
          echo "Assets directory created before build"
        
      - name: Build üîß
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Ensure directories and files exist üìã
        run: |
          echo "www.sarlfaziolorenzo.fr" > docs/CNAME
          touch docs/.nojekyll
          
          # V√©rifier si 404.html existe dans public et le copier si n√©cessaire
          if [ -f "public/404.html" ]; then
            cp public/404.html docs/404.html
            echo "‚úÖ 404.html copied from public to docs"
          else
            # Cr√©er un fichier 404.html minimal si n√©cessaire
            cat > docs/404.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>SARL FAZIO Lorenzo | Redirection</title>
  <script type="text/javascript">
    window.location.replace(window.location.origin);
  </script>
</head>
<body>
  <div style="text-align: center; padding-top: 50px;">
    <h2>Redirection en cours...</h2>
    <p>Vous allez √™tre redirig√© vers la page d'accueil.</p>
    <p>Si la redirection ne fonctionne pas, <a href="/">cliquez ici</a></p>
  </div>
</body>
</html>
EOF
            echo "‚ö†Ô∏è Created a new 404.html file in docs"
          fi
          
          echo "Verifying build output structure..."
          ls -la docs/
          
          # V√©rification et cr√©ation du r√©pertoire assets
          echo "Checking for assets directory:"
          if [ ! -d "docs/assets" ]; then
            echo "‚ùå Assets directory NOT found, creating directory"
            mkdir -p docs/assets
            echo "// Placeholder file to ensure directory is committed" > docs/assets/placeholder.js
          else
            echo "‚úÖ Assets directory found"
            ls -la docs/assets/
            if [ -z "$(ls -A docs/assets)" ]; then
              echo "‚ö†Ô∏è Assets directory is empty, creating placeholder"
              echo "// Placeholder file to ensure directory is committed" > docs/assets/placeholder.js
            fi
          fi

          # S'assurer que le script gptengineer est pr√©sent dans index.html
          if ! grep -q "gptengineer.js" docs/index.html; then
            echo "‚ö†Ô∏è gptengineer.js script not found in docs/index.html, adding it"
            sed -i 's|<head>|<head>\n    <script src="https://cdn.gpteng.co/gptengineer.js" type="module"></script>|' docs/index.html
          else
            echo "‚úÖ gptengineer.js script found in docs/index.html"
          fi
          
          # Ajouter un script de diagnostic en bas du fichier index.html
          sed -i 's|</body>|<script>console.log("Site charg√©: " + new Date().toString());</script></body>|' docs/index.html
          echo "‚úÖ Added diagnostic script to index.html"
          
      - name: Deploy to GitHub Pages üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
          branch: gh-pages
          clean: false  # Pour √©viter de supprimer des fichiers importants

